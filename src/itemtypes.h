
#include "xorstring.hpp"

/*
 * itemtypes.h
 *
 *  Created on: Feb 10, 2017
 *      Author: nullifiedcat
 */

#ifndef ITEMTYPES_H_
#define ITEMTYPES_H_

#include "beforecheaders.h"
#include <map>
#include <string>
#include <vector>
#include "aftercheaders.h"

const std::string tf2c_weapon_names[] = {
	XStr("BOTTLE"),
	XStr("GRENADE_NAPALM"), XStr("SUPERSHOTGUN_MERCENARY"), XStr("ROCKETBETA"), XStr("GRENADE_GRENADELAUNCHER"),
	XStr("GRENADELAUNCHER"), XStr("GRENADE_PIPEBOMB"), XStr("CIGARETTE_CASE"), XStr("BRANDINGIRON"),
	XStr("BANHAMMER"), XStr("SNIPERRIFLE"), XStr("GRENADE_HEAL"), XStr("HAMMERFISTS"),
	XStr("GRENADE_NAIL"), XStr("DART"), XStr("RPG"), XStr("UMBRELLA_CIVILIAN"),
	XStr("GRENADE_FRAG"), XStr("GRENADE_MIRV"), XStr("MEDIGUN"), XStr("GRENADE_MIRV_DEMO"),
	XStr("PICKAXE"), XStr("SYRINGEGUN"), XStr("SCATTERGUN"), XStr("STENGUN"),
	XStr("SNUBNOSE"), XStr("MINIGUN"), XStr("WRENCH"), XStr("BAT"),
	XStr("SAPPER"), XStr("ROCKET"), XStr("HAMMER"), XStr("FISHWHACKER"),
	XStr("KRITZKRIEG"), XStr("FLAREGUN"), XStr("SHOVEL"), XStr("PISTOL"),
	XStr("SMG"), XStr("LEADPIPE"), XStr("FLAREGUN_SHELL"), XStr("GRENADE_EMP"),
	XStr("CYCLOPS"), XStr("MACHETE"), XStr("SHOTGUN"), XStr("REVOLVER"),
	XStr("GRENADE_GAS"), XStr("GRENADE_BEARTRAP"), XStr("FIREAXE"), XStr("GRENADE_CONC"),
	XStr("NAILGUN"), XStr("BONESAW"), XStr("STICKYBOMB_LAUNCHER"), XStr("GRENADE_BOMBLET"),
	XStr("TRANQ"), XStr("DYNAMITE"), XStr("CLUB"), XStr("TOMMYGUN"),
	XStr("COFFEPOT"), XStr("STICKYBOMB"), XStr("ROCKETLAUNCHER"), XStr("FLAMETHROWER"),
	XStr("CROWBAR"), XStr("BUILDER"), XStr("HEAVY_ARTILLERY"), XStr("KNIFE"),
	XStr("PDA_ENGINEER"), XStr("BOTTLE_BROKEN"), XStr("TOOLBOX"), XStr("SYRINGE_PROJ"),
	XStr("NAIL"), XStr("SYRINGE"), XStr("OVERHEALER") };

enum k_EItemType {
	ITEM_NONE = 0,

	ITEM_HEALTH_SMALL,
	ITEM_HEALTH_MEDIUM,
	ITEM_HEALTH_LARGE,

	ITEM_AMMO_SMALL,
	ITEM_AMMO_MEDIUM,
	ITEM_AMMO_LARGE,

	ITEM_POWERUP_STRENGTH,
	ITEM_POWERUP_RESISTANCE,
	ITEM_POWERUP_VAMPIRE,
	ITEM_POWERUP_REFLECT,
	ITEM_POWERUP_HASTE,
	ITEM_POWERUP_REGENERATION,
	ITEM_POWERUP_PRECISION,
	ITEM_POWERUP_AGILITY,
	ITEM_POWERUP_KNOCKOUT,
	ITEM_POWERUP_KING,
	ITEM_POWERUP_PLAGUE,
	ITEM_POWERUP_SUPERNOVA,
	ITEM_POWERUP_CRITS,

	ITEM_POWERUP_FIRST = ITEM_POWERUP_STRENGTH,
	ITEM_POWERUP_LAST = ITEM_POWERUP_CRITS,

	ITEM_TF2C_PILL,
	ITEM_TF2C_CRITS,

	ITEM_TF2C_W_BOTTLE,
	ITEM_TF2C_W_GRENADE_NAPALM,
	ITEM_TF2C_W_SUPERSHOTGUN_MERCENARY,
	ITEM_TF2C_W_ROCKETBETA,
	ITEM_TF2C_W_GRENADE_GRENADELAUNCHER,
	ITEM_TF2C_W_GRENADELAUNCHER,
	ITEM_TF2C_W_GRENADE_PIPEBOMB,
	ITEM_TF2C_W_CIGARETTE_CASE,
	ITEM_TF2C_W_BRANDINGIRON,
	ITEM_TF2C_W_BANHAMMER,
	ITEM_TF2C_W_SNIPERRIFLE,
	ITEM_TF2C_W_GRENADE_HEAL,
	ITEM_TF2C_W_HAMMERFISTS,
	ITEM_TF2C_W_GRENADE_NAIL,
	ITEM_TF2C_W_DART,
	ITEM_TF2C_W_RPG,
	ITEM_TF2C_W_UMBRELLA_CIVILIAN,
	ITEM_TF2C_W_GRENADE_FRAG,
	ITEM_TF2C_W_GRENADE_MIRV,
	ITEM_TF2C_W_MEDIGUN,
	ITEM_TF2C_W_GRENADE_MIRV_DEMO,
	ITEM_TF2C_W_PICKAXE,
	ITEM_TF2C_W_SYRINGEGUN,
	ITEM_TF2C_W_SCATTERGUN,
	ITEM_TF2C_W_STENGUN,
	ITEM_TF2C_W_SNUBNOSE,
	ITEM_TF2C_W_MINIGUN,
	ITEM_TF2C_W_WRENCH,
	ITEM_TF2C_W_BAT,
	ITEM_TF2C_W_SAPPER,
	ITEM_TF2C_W_ROCKET,
	ITEM_TF2C_W_HAMMER,
	ITEM_TF2C_W_FISHWHACKER,
	ITEM_TF2C_W_KRITZKRIEG,
	ITEM_TF2C_W_FLAREGUN,
	ITEM_TF2C_W_SHOVEL,
	ITEM_TF2C_W_PISTOL,
	ITEM_TF2C_W_SMG,
	ITEM_TF2C_W_LEADPIPE,
	ITEM_TF2C_W_FLAREGUN_SHELL,
	ITEM_TF2C_W_GRENADE_EMP,
	ITEM_TF2C_W_CYCLOPS,
	ITEM_TF2C_W_MACHETE,
	ITEM_TF2C_W_SHOTGUN,
	ITEM_TF2C_W_REVOLVER,
	ITEM_TF2C_W_GRENADE_GAS,
	ITEM_TF2C_W_GRENADE_BEARTRAP,
	ITEM_TF2C_W_FIREAXE,
	ITEM_TF2C_W_GRENADE_CONC,
	ITEM_TF2C_W_NAILGUN,
	ITEM_TF2C_W_BONESAW,
	ITEM_TF2C_W_STICKYBOMB_LAUNCHER,
	ITEM_TF2C_W_GRENADE_BOMBLET,
	ITEM_TF2C_W_TRANQ,
	ITEM_TF2C_W_DYNAMITE,
	ITEM_TF2C_W_CLUB,
	ITEM_TF2C_W_TOMMYGUN,
	ITEM_TF2C_W_COFFEPOT,
	ITEM_TF2C_W_STICKYBOMB,
	ITEM_TF2C_W_ROCKETLAUNCHER,
	ITEM_TF2C_W_FLAMETHROWER,
	ITEM_TF2C_W_CROWBAR,
	ITEM_TF2C_W_BUILDER,
	ITEM_TF2C_W_HEAVY_ARTILLERY,
	ITEM_TF2C_W_KNIFE,
	ITEM_TF2C_W_PDA_ENGINEER,
	ITEM_TF2C_W_BOTTLE_BROKEN,
	ITEM_TF2C_W_TOOLBOX,
	ITEM_TF2C_W_SYRINGE_PROJ,
	ITEM_TF2C_W_NAIL,
	ITEM_TF2C_W_SYRINGE,
	ITEM_TF2C_W_OVERHEALER,

	ITEM_TF2C_W_FIRST = ITEM_TF2C_W_BOTTLE,
	ITEM_TF2C_W_LAST = ITEM_TF2C_W_OVERHEALER,

	ITEM_HL_BATTERY,

	ITEM_SPELL,
	ITEM_SPELL_RARE,

	ITEM_COUNT
};

class CachedEntity;
typedef bool(*ItemCheckerFn)(CachedEntity*);
typedef k_EItemType(*ItemSpecialMapperFn)(CachedEntity*);

class ItemModelMapper {
public:
	void RegisterItem(std::string modelpath, k_EItemType type);
	k_EItemType GetItemType(CachedEntity* entity);

	std::map<std::string, k_EItemType> models;
	std::map<uintptr_t, k_EItemType> map;
};

class ItemManager {
public:
	ItemManager();
	void RegisterModelMapping(std::string path, k_EItemType type);
	void RegisterSpecialMapping(ItemCheckerFn fn, k_EItemType type);
	k_EItemType GetItemType(CachedEntity* ent);

	std::map<ItemCheckerFn, k_EItemType> special_map;
	std::vector<ItemSpecialMapperFn> specials;
	ItemModelMapper mapper_special;
	ItemModelMapper mapper;
};

extern ItemManager g_ItemManager;

#endif /* ITEMTYPES_H_ */
